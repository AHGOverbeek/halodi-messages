#include <std_msgs/msg/Header.idl>
#include <geometry_msgs/msg/Vector3.idl>
#include <geometry_msgs/msg/Quaternion.idl>
#include <geometry_msgs/msg/Twist.idl>
#include <halodi_msgs/msg/DisableWholeBodyBalance.idl>
#include <halodi_msgs/msg/ImuMeasurement.idl>
#include <halodi_msgs/msg/JointMeasurement.idl>


module halodi_msgs {
    module msg {
    
        /**
          * Full state of the robot
          *
          */
        @TypeCode(type="halodi_msgs::msg::dds_::WholeBodyState_")
        struct WholeBodyState
        {
            /**
              * Header including the timestamp of the robot when this measurement was taken
              *
              */
            std_msgs::msg::Header header;
            
            /**
              * Last received sequence_id from WholeBodyControllerCommand
              *
              */
            long last_received_sequence_id;
            
            
            /**
              * The status of the balance module
              */
            halodi_msgs::msg::DisableWholeBodyBalance balance_status;
            
            /**
              * Position of the root joint (pelvis) of the robot
              *
              */
            geometry_msgs::msg::Quaternion position;
            
            /**
              * Orientation of the root joint (pelvis) of the robot
              *
              */
            geometry_msgs::msg::Quaternion orientation;
            
            /**
              * Velocity of the root joint (pelvis) of the robot expressed as Twist
              * 
              * Body frame: root joint (pelvis)
              * Base frame: root joint (pelvis)
              * Expressed in frame: World
              *
              */
            geometry_msgs::msg::Twist velocity;
            
            /**
              * Raw IMU Measurements for each IMU on the robot
              *
              */
            sequence<halodi_msgs::msg::ImuMeasurement, 2> imu_measurements;
            
            /**
              * State of each joint on the robot
              *
              */
            sequence<halodi_msgs::msg::JointMeasurement, 25> joint_states;
            
        };
    };
};
