#include <geometry_msgs/msg/Vector3.idl>


#include <halodi_msgs/msg/ReferenceFrameName.idl>
#include <halodi_msgs/msg/PassivityData.idl>

module halodi_msgs {
    module msg {
    
        @TypeCode(type="halodi_msgs::msg::dds_::TaskSpaceFeedback_")
        struct TaskSpaceFeedback
        {
            /**
             * Body Frame: The reference frame that is being controlled.
             *
             * Valid options are all frames that are "Controllable"
             *
             */
            halodi_msgs::msg::ReferenceFrameName body_frame;
            
            
            
            /**
             * Expressed in frame: Origin of the feedback.
             *
             * Valid options are all frames that are "Expressable in"
             *
             */
            halodi_msgs::msg::ReferenceFrameName expressed_in_frame;
            
            
            /**
             * Align the orientation of the expressed in frame such that z-axis points up. 
             * 
             * The heading (also known as yaw or the rotation around the z-axis) and position match the expressed_in_frame.
             *
             * This can be useful for keeping an end effector aligned with gravity while moving.
             * 
             */
            boolean express_in_z_up;
            
                        
            
            /**
             * Desired angular acceleration (rad/s^2) applied on the body frame, expressed in "expressed_in_frame"
             *
             * Note: This is the desired from the angular acceleration PD controller, not achieved from the QP.
             *
             */
            geometry_msgs::msg::Vector3 angular_acceleration;
            
            /**
             * Desired linear acceleration (rad/s^2) applied on the body frame, expressed in "expressed_in_frame"
             *
             * Note: This is the desired from the linear acceleration PD controller, not achieved from the QP.
             *
             */
            geometry_msgs::msg::Vector3 linear_acceleration;
            
            
            /**
             * (Optional) Output of the passivity layer. Internal use, keep disabled.
             *
             * If not set, the passivity layer will be disabled.
             *
             */
             sequence<halodi_msgs::msg::PassivityData,1> passivity_output;
        };
    };
};
