#include <geometry_msgs/msg/Vector3.idl>


#include <halodi_msgs/msg/ReferenceFrameName.idl>

module halodi_msgs {
    module msg {
    
        @TypeCode(type="halodi_msgs::msg::dds_::TaskSpaceFeedback_")
        struct TaskSpaceFeedback
        {
            /**
             * Body Frame: The reference frame that is being controlled.
             *
             * Valid options are all frames that are "Controllable"
             *
             */
            halodi_msgs::msg::ReferenceFrameName body_frame;
            
            
            
            /**
             * Expressed in frame: Origin of the feedback.
             *
             * Valid options are all frames that are "Expressable in"
             *
             */
            halodi_msgs::msg::ReferenceFrameName expressed_in_frame;
            
            
            /**
             * Align the orientation of the expressed in frame such that z-axis points up. 
             * 
             * The heading (also known as yaw or the rotation around the z-axis) and position match the expressed_in_frame.
             *
             * This can be useful for keeping an end effector aligned with gravity while moving.
             * 
             */
            boolean express_in_z_up;
            
            
             /**
              *
              * If true, the feedback controller controls the force acting on the end effector. 
              * If false, the feedback controller controls acceleration.
              *
              */
            boolean using_force_feedback;
            
            
            /**
             * Desired angular effort applied on the body frame, expressed in "expressed_in_frame"
             *
             * If using_force_feedback is false, this is angular acceleration (rad/s^2).
             * If using_force_feedback is true, this is torque (Nm).
             *
             */
            geometry_msgs::msg::Vector3 angular_effort;
            
            /**
             * Desired linear effort applied on the body frame, expressed in "expressed_in_frame"
             *
             * If using_force_feedback is false, this is linear acceleration (rad/s^2).
             * If using_force_feedback is true, this is force (N).
             *
             */
            geometry_msgs::msg::Vector3 linear_effort;
            
            
            /** 
             * (Optional) Energy output from passivity layer
             * 
             * If not set, the passivity layer is disabled. 
             *
             */
             sequence<double,1> energy_output;
             
             
             /**
              * (Optional) Tank level from the passivity layer.
              *
              * If not set, the passivity layer is disabled. 
              */
              sequence<double, 1> energy_tank_level;
        };
    };
};
