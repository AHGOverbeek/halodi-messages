
#include <halodi_msgs/msg/JointName.idl>

module halodi_msgs {
    module msg {
    
        /**
          * Measurements for a single joint
          *
          *
          * Not using sensor_msgs::msg::JointState to avoid name lookups
          * 
          * Called JointMeasurement instead of JointState, to avoid confusing with sensor_msgs::msg::JointState.
          *
          */
        @TypeCode(type="halodi_msgs::msg::dds_::JointMeasurement_")
        struct JointMeasurement
        {
            halodi_msgs::msg::JointName joint;
            
            /**
              * Current measured joint position (rad for revolute, meter for prismatic)
              *
              * Note: This is the processed position the whole body controller uses internally
              *
              */
            double position;
            
            /**
              * Current measured joint velocity (rad/s for revolute, meter/s for prismatic)
              *
              * Note: This is the processed position the whole body controller uses internally
              */
            double velocity;

            /**
              *
              * Current measured effort (Nm for revolute, N for prismatic)
              * 
              * Note: This measurement is quite noisy and currently not implemented for all joints. It is recommeded to use desiredEffort for haptic feedback applications.
              *
              */
            double measuredEffort;
            
            
            /**
              *
              * Current desired effort (Nm for revolute, N for prismatic)
              *
              * Note: This value has less noise than the measured effort and is recommeded to use for haptic feedback applications. With a low gear ratio, the desired and measured effort should be comparable.
              *
              */
            double desiredEffort;
        };
    };
};
